spring.application.name=edukid-api
# CONFIGURACOES PARA CONEXAO COM BANCO DE DADOS
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/bd_new_edukid?useTimezone=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root


# JPA FAZ A TRADUCAO DE OBJ JAVA PARA SQL APROPRIADO PARA CADA BANCO (MYSQL)
spring.jpa.open-in-view=false
# EXISTEM ALGUMAS CONFIGURACOES, O IDEAL E QUE SE USE 'NONE'. OS DIFERENTES DE 'NONE' NAO DEVEM SER USADOS EM PRODUCAO
# NONE: JPA NAO FAZ NADA NA ESTRUTURA DO SEU BANCO
# VALIDATE: VALIDA O SCHEMA
# CREATE: PODE CRIAR E PODE DELETAR DADOS
# CREATE-DROP: O BANCO E CRIADO E DELETADO A CADA SESSAO
# UPDATE: ALTERA O QUE JA SE TEM
spring.jpa.hibernate.ddl-auto=none

# recomendado true apenas para debug, fora isso e desperdicio de recursos da maquina.
	# Desabilita log sql
#spring.jpa.show-sql=false
	# Habilita log sql
	
# Ativa o log das consultas SQL
spring.jpa.show-sql=true
# Formata o SQL no log para uma leitura mais fácil
spring.jpa.properties.hibernate.format_sql=true
# Mostra os valores dos parâmetros nas consultas SQL
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

#LOGS DETALHADOS
#logging.level.org.hibernate=DEBUG
#logging.level.org.springframework=DEBUG



# CONFIGURA��O PARA ENVIO DE EMAIL
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=aplicativo.edukid@gmail.com
spring.mail.password=u c f r k s k n c c z t q l j v
#spring.mail.username=aplicativo.edukid@gmail.com
#spring.mail.password=&duKid0!1
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true


# CONFIGURAÇÕES DO SECRET PARA GERAR O JWT
	#Caso não encontre a variavel de ambiente 'JWT_SECRET' utilizara 'my-secret-key' como scret
api.security.token.secret = ${JWT_SECRET:my-secret-key}




